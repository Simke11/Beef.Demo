/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Entities;
using Beef.Demo.Common.Entities;
using RefDataNamespace = Beef.Demo.Common.Entities;

namespace Beef.Demo.Business
{
    /// <summary>
    /// Defines the Company business functionality.
    /// </summary>
    public partial interface ICompanyManager
    {
        /// <summary>
        /// Gets the <see cref="Company"/> object that matches the selection criteria.
        /// </summary>
        /// <param name="id">The <see cref="Company"/> identifier.</param>
        /// <returns>The selected <see cref="Company"/> object where found; otherwise, <c>null</c>.</returns>
        Task<Company?> GetAsync(Guid id);

        /// <summary>
        /// Creates the <see cref="Company"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Company"/> object.</param>
        /// <returns>A refreshed <see cref="Company"/> object.</returns>
        Task<Company> CreateAsync(Company value);

        /// <summary>
        /// Updates the <see cref="Company"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Company"/> object.</param>
        /// <param name="id">The <see cref="Company"/> identifier.</param>
        /// <returns>A refreshed <see cref="Company"/> object.</returns>
        Task<Company> UpdateAsync(Company value, Guid id);

        /// <summary>
        /// Deletes the <see cref="Company"/> object that matches the selection criteria.
        /// </summary>
        /// <param name="id">The <see cref="Company"/> identifier.</param>
        Task DeleteAsync(Guid id);

        /// <summary>
        /// Gets the <see cref="Company"/> collection object that matches the selection criteria.
        /// </summary>
        /// <returns>A <see cref="CompanyCollectionResult"/>.</returns>
        Task<CompanyCollectionResult> GetAllAsync();
    }
}

#pragma warning restore IDE0005
#nullable restore